<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAGYktHRAD/AP8A/6C9p5MAAAI0SURBVGhD7Zk7aBRRGEY3RtEIiha2lhZCEMFXISIBC+2tYiVI
        Cq0sBV8IYiUWEuMDG4Ngo7WFkCIpVRAlpBErMVEERVHwsZ7/3s8mxWZm7rr/D86B0+399ixhd2cznZaW
        lsHT7XaHcC+exht4U57H3XpYXIgcxpP4GntxF4d1LBaErcfHVlmRBbyKWzURA4JuW10DPuE+zfhCyE78
        bVUNeYMjmvODiMspp4xjmvODiKe5pYjrmvODiI+5pYgnmvOBgFX4K6WUMatJHwiwF/IzpZQxo0k/iHib
        W4qY1pwfRDzLLUVc1JwfRNzJLUWMac4PIk7klsZ8xxBfiBMppznvcbPm/CBiMeWUcU5zfhDxObcUcUVz
        fhAxk1uKOKo5P4g4jCVfii9xreZ8IeRQSqqPfQdt0Iw/xKzGr1ZWk2uaiANR9lu8Lnt0PA5E7cAfKa8a
        czoaD+Iu5MYVsY/sUR2LCYFV3itTenhciPySW3syqYfHhchvubUnt/TwmBC4JneuyH0diQmB9slVhec4
        pGOxIGyLAqtyCeO8GIvBcVzCutgF5zZN+UDARjyF81iCXXA+xDEc3F+IJ9uOk9iP3yHLeYV2a+LfXUgy
        vgsfYck/rKvyAc/iJj19OYytQ7vzNIgXsJx3eEQpzWFkBPvxC7AEew8dV1IzGLiXpvyxq+r9yqoHBw+m
        iTi8wPqfahx6kI7H4oDyqsOhfvxzut+cUV41OGC3C6bw7z3yKI4rsaWl5f+j0/kDiJlVF2y8c1wAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAGYktHRAD/AP8A/6C9p5MAAAHiSURBVFhH7Ze7LwRRFIdXCBLxKtQShU60GiFBVBqVgkSDRDQK
        j4JKJSqRKBRUFPwFIkG1jVZoCI1XxCtCgjC+c+8ZBbOzl7mrEF/yFXPu75x7N5mdnU19lyAIGnAB9/Ea
        T3ALh7FEY/5heDEu4Rtm4hSbtMUfDC3AddlBOcc5HMMJ3MCQZ2zRVj8wcNyMtqxhmS59QK0dbyQAF1iq
        S8lgUBFeyVTYxgJd+gJrrSZlGdFyMhgknyykWcsZISM3pJDWUjIYJHe38IQZP30ImUmTDoI7LSWDQVN2
        XnCupVjI9du4oVDLP4ch4QHOtBQLuT4bNxRp+ecw5P8Av38AGgtxCDfxHoVXlGd/Nh8wZA8XsU5HZ4dw
        BabRJ/IV7tEt4iG4alr884L1uk00BKox7tcuKYu6VTQEOm0uZ+zqVtEQ6LG5nHGsW0VD4DsHmMdG7MIj
        KTjg7QDL2mLguhbla5oNbwfo1ZYPqB3apVi8HWBaWwxcV+KjWYnH2wHkwdKhPfkob0oueL0JZ7RH3pZd
        +VsHmNWecnvpRNYDdNucE5cor18r5sqNI90qGgJtNpcz4t+UCZTgrYnmhgndKjOEBm3WOwfo9m+J4Ci6
        PFhc2cEaHe8GDVU4gPIHNIlNmKdjP5FKvQNeEZHZrAu20gAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9/+Pj/f/j4/3/4+P9/+Pj/f/j4/3/4+P9/+Pj/f/j4/3/4+P9/+Pj/f/iYn0/1NRyPd2XJWAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7O8QNTk7O6o+P9/+Pj/f/j4/3/4+P
        9/+Pj/f/j4/3/4+P9/+Pj/f/j4/3/4+P9/+Pj/f/j4/3/4+P9/+Pj/f/j4/3/4+P9/+Li/T/WVXJ/pJu
        gu+3fE9KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMTMy1enrq/4+P
        9/+Pj/f/j4/3/4+P9/+Pj/f/j4/3/4+P9/+Pj/f/j4/3/4+P9/+Pj/f/j4/3/4+P9/+Pj/f/i4v0/1hV
        y/61kKL/6rGF/76CV+u2eVE/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEJC
        xR9MTM3qiIjz/4+P9/+Pj/f/j4/3/4+P9/+Pj/f/j4/3/4+P9/+Pj/f/j4/3/4+P9/+Pj/f/j4/3/4uL
        9P9ZVcn+tZGh//C3i//wt4v/6rGF/72DV+u2eVE/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAENDykhPT8/viYn0/4+P9/+Pj/f/j4/3/4+P9/+Pj/f/j4/3/4+P9/+Pj/f/j4/3/4+P
        9/+Li/T/WVXJ/rWRof/wt4v/8LeL//C3i//wt4v/67OG/76DWOm2fVU/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZGyV9RUdDvi4v0/4+P9/+Pj/f/j4/3/4+P9/+Pj/f/j4/3/4+P
        9/+Pj/f/jIz1/1tXy/6ujKT/8LeL//C3i//wt4v/8LeL//C3i//wt4v/67OG/7+DV+q2fVU/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEhIy1hQUM/vi4v0/4+P9/+Pj/f/j4/3/4+P
        9/+Pj/f/j4/3/4yM9f9aV8v+royk//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/67OG/76E
        WOm5gFI+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZGyldQUM/vi4v0/4+P
        9/+Pj/f/j4/3/4+P9/+MjPX/WlfL/q+LpP/wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3
        i//wt4v/7LSH/8CEWOu4flJBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZG
        yldQUM/vi4v0/4+P9/+Pj/f/jIz1/1pXy/6vi6T/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3
        i//wt4v/8LeL//C3i//wt4v/67OG/7yCVuaxdk4aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEdHylZQUM/vi4v0/4yM9f9aV8v+r4uk//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3
        i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/36Z6/LyAUqcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEtLy05TUcr5V1TL/reRof/wt4v/8LeL//C3i//wt4v/8LeL//C3
        i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/vYJW6apxVQkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVdmHyUbn/z67OG//C3i//wt4v/8LeL//C3
        i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//Nk2jutHpOQQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALh8Tki+hFjs67KH//C3
        i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL/9ad
        cfq0ek5cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALh7
        U1PBhVnt7bOI//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3
        i//wt4v/1Zlu9rR7TlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALh8Tki/hFjr7LOH//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3
        i//wt4v/8LeL//C3i//Gi2DqtX1PLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALh8Tki/hFnr7LOH//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3
        i//wt4v/8LeL//C3i//wt4v/7rSI/7uAVOT/AAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALl6TUm/hFnr7LSH//C3i//wt4v/8LeL//C3
        i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//Rl2rytn5SbQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALp8T0rAhFjr67KH//C3
        i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/3aR3+7qAU8SAgIACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALZ8
        UUK9glbo4ah7/vC3i//wt4v/8LeL//C3i//wt4v/7rWJ/9KYa/W6gVPItoBJDgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALV7Sh+7gFWvvoNX59GXavLXnXH11Zxv9cqPY+u7gVXhuXxRcb+AQAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC/gEAIt3tNPLZ5T1S2e09NtHxRKQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////////Af///AD///gAf//4AD//8AAf//AAD//wAAf/8AA
        D//AAAP/wAAD/8AAAf/gAAD/8AAAf/gAAD/8AAAf/gAAD/8AAAf/gAAD/8AAA//gAAP/8AAD//gAA//8
        AAP//gAD//8AB///gAf//8AP///gP///////////
</value>
  </data>
</root>